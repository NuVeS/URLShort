openapi: 3.0.0
info:
  version: '1'
  title: ''
  description: ''
paths:
  /login:
    post:
      tags:
      - auth
      operationId: login
      summary: Login using name and password
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        200:
          description: Success. Returns login token used for other requests
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: Bad Request
  /register:
    post:
      tags:
      - auth
      operationId: register
      summary: Register new user using name and password. Returns token
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        200:
          description: Success. Returns login token used for other requests
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: Bad Request
  /logout:
    get:
      tags:
      - auth
      operationId: logout
      summary: Drops token
      parameters:
        - in: header
          name: token
          schema:
            type: string
          required: true
      responses:
        200:
          description: Success
        400:
          description: Bad Request
  /list:
    get:
      tags:
      - urls
      operationId: list
      summary: List all user links 
      parameters:
        - in: header
          name: token
          schema:
            type: string
          required: true
      responses:
        200:
          description: Success
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/LinkListResponse'
        400:
          description: Bad Request
  /shorten:
    post:
      tags:
      - urls
      operationId: shorten
      summary: Make a new short link from url 
      parameters:
        - in: header
          name: token
          schema:
            type: string
          required: true
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLinkRequest'
        required: true
      responses:
        200:
          description: Success
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponse'
        400:
          description: Bad Request
  /delete:
    post:
      tags:
      - urls
      operationId: delete
      summary: Delete saved link 
      parameters:
        - in: header
          name: token
          schema:
            type: string
          required: true
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
        required: true
      responses:
        200:
          description: Success
        400:
          description: Bad Request
components:
  schemas:
    LinkRequest:
      type: object
      required: [url]
      properties:
        url:
          type: string
    NewLinkRequest:
      type: object
      required: [url]
      properties:
        url:
          type: string
        beauty:
          type: string
    LinkListResponse:
      type: object
      required: [list]
      properties:
        list:
          type: array
          items: 
            $ref: '#/components/schemas/LinkResponse'
    LinkResponse:
      type: object
      required: [url, shortUrl]
      properties:
        url:
          type: string
        shortUrl:
          type: string
    LoginRequest:
        type: object
        required: [name, password]
        properties:
          name: 
            type: string
            example: "i.ivanov"
          password:
           type: string
           example: "qwerty123"
    LoginResponse:
      type: object
      required: [token]
      properties:
        token: 
          type: string
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/NuVeS/Shortener/1